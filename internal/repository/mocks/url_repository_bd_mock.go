// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"sync"
	"url-checker/internal/repository/entity"
)

// UrlRepositoryBdMock is a mock implementation of repository.urlRepositoryBd.
//
//	func TestSomethingThatUsesurlRepositoryBd(t *testing.T) {
//
//		// make and configure a mocked repository.urlRepositoryBd
//		mockedurlRepositoryBd := &UrlRepositoryBdMock{
//			GetFunc: func(ctx context.Context, url string) (entity.UrlInBd, error) {
//				panic("mock out the Get method")
//			},
//		}
//
//		// use mockedurlRepositoryBd in code that requires repository.urlRepositoryBd
//		// and then make assertions.
//
//	}
type UrlRepositoryBdMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(ctx context.Context, url string) (entity.UrlInBd, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// URL is the url argument value.
			URL string
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *UrlRepositoryBdMock) Get(ctx context.Context, url string) (entity.UrlInBd, error) {
	callInfo := struct {
		Ctx context.Context
		URL string
	}{
		Ctx: ctx,
		URL: url,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	if mock.GetFunc == nil {
		var (
			urlInBdOut entity.UrlInBd
			errOut     error
		)
		return urlInBdOut, errOut
	}
	return mock.GetFunc(ctx, url)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//
//	len(mockedurlRepositoryBd.GetCalls())
func (mock *UrlRepositoryBdMock) GetCalls() []struct {
	Ctx context.Context
	URL string
} {
	var calls []struct {
		Ctx context.Context
		URL string
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}
